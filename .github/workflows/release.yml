name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pyinstaller
        
    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller binance-mcp-server.spec
        
    - name: Build executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile --name binance-mcp-server-linux src/binance_context_server/server.py
        
    - name: Build executable (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --name binance-mcp-server-macos src/binance_context_server/server.py
        
    - name: Build Python package
      run: |
        python -m build
        
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: binance-mcp-server-windows
        path: |
          dist/binance-mcp-server.exe
          dist/*.whl
          dist/*.tar.gz
          
    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: binance-mcp-server-linux
        path: |
          dist/binance-mcp-server-linux
          dist/*.whl
          dist/*.tar.gz
          
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: binance-mcp-server-macos
        path: |
          dist/binance-mcp-server-macos
          dist/*.whl
          dist/*.tar.gz

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Binance Context Server ${{ github.ref_name }}
          
          ### ðŸš€ Features
          - **17 comprehensive tools** for cryptocurrency market analysis
          - **15 specialized resources** for different market segments
          - **Advanced technical analysis** with RSI, SMA, and volume indicators
          - **Real-time market sentiment** analysis
          - **Multi-platform executables** for Windows, Linux, and macOS
          
          ### ðŸ“¦ Downloads
          
          **Windows:**
          - `binance-mcp-server.exe` - Standalone executable
          
          **Linux:**
          - `binance-mcp-server-linux` - Standalone executable
          
          **macOS:**
          - `binance-mcp-server-macos` - Standalone executable
          
          **Python Package:**
          - `binance_context_server-*.whl` - Wheel package
          - `binance_context_server-*.tar.gz` - Source distribution
          
          ### ðŸ”§ Installation
          
          **Option 1: Use Pre-built Executable**
          1. Download the appropriate executable for your platform
          2. Make it executable (Linux/macOS): `chmod +x binance-mcp-server-*`
          3. Run: `./binance-mcp-server-*`
          
          **Option 2: Install Python Package**
          ```bash
          pip install binance_context_server-*.whl
          ```
          
          ### ðŸ“š Usage
          See the [README](https://github.com/${{ github.repository }}/blob/main/README.md) for detailed usage instructions and API reference.
          
        files: |
          binance-mcp-server-windows/binance-mcp-server.exe
          binance-mcp-server-linux/binance-mcp-server-linux
          binance-mcp-server-macos/binance-mcp-server-macos
          binance-mcp-server-windows/*.whl
          binance-mcp-server-windows/*.tar.gz
        draft: false
        prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
